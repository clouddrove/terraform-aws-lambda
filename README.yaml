---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: Terraform AWS Lambda

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-lambda

# Badges to display
badges:
  - name: "Terraform"
    image: "https://img.shields.io/badge/Terraform-v1.1.7-green"
    url: "https://www.terraform.io"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-lambda/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-lambda/actions/workflows/tfsec.yml"
  - name: "static-checks"
    image: "https://github.com/clouddrove/terraform-aws-lambda/actions/workflows/terraform.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-lambda/actions/workflows/terraform.yml"
#  description of this project
# yamllint disable rule:line-length
description: |-
  Terraform module to create Lambda resource on AWS for create lambda function.

# extra content
# please not remove these two If you need add more
include:
  - "terraform.md"

# How to use this project
# yamllint disable rule:line-length
usage: |-
  Here are some examples of how you can use this module in your inventory structure:
  ### Basic Function
  ```hcl
    module "lambda" {
      source        = "clouddrove/lambda/aws"
      version       = "1.3.0"
      name           = "lambda"
      environment    = "test"
      label_order    = ["name","environment"]
      enabled        = true
      filename       = "./../../../lambda_function_payload"
      handler        = "index.handler"
      runtime        = "nodejs8.10"
      variables      = {
                         foo = "bar"
                       }
    }
  ```
  ### Basic S3 Function
  ```hcl
    module "lambda" {
      source        = "clouddrove/lambda/aws"
      version       = "1.3.0"
      name          = "lambda"
      environment   = "test"
      label_order   = ["name","environment"]
      enabled       = true
      s3_bucket     = "test-s3-backups"
      s3_key        = "lambda_function_payload.zip"
      handler       = "index.handler"
      runtime       = "nodejs8.10"
      variables     = {
                        foo = "bar"
                      }
    }
  ```
  ### Complete Function
  ```hcl
    module "lambda" {
      source        = "clouddrove/lambda/aws"
      version       = "1.3.0"

      name        = "lambda"
      environment = "test"
      label_order = ["name","environment"]
      enabled     = true
      timeout = 60

      filename           = "./../../lambda/src"
      handler            = "index.lambda_handler"
      runtime            = "python3.8"
      iam_actions = [
        "logs:CreateLogStream",
        "logs:CreateLogGroup",
        "logs:PutLogEvents"
      ]
      names = [
        "python_layer"
      ]
      layer_filenames = ["./../../lambda/packages/Python3-lambda.zip"]
      compatible_runtimes = [
        ["python3.8"]
      ]

      statement_ids = [
        "AllowExecutionFromCloudWatch"
      ]
      actions = [
        "lambda:InvokeFunction"
      ]
      principals = [
        "events.amazonaws.com"
      ]
      source_arns = ["arn:aws:events:eu-west-1:xxxxxxxxxxxxx:rule/rulename"]
      variables = {
        foo  = "bar"
      }
    }
  ```
