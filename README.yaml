---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: Terraform AWS Lambda

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-lambda

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/clouddrove/terraform-aws-lambda.svg"
    url: "https://github.com/clouddrove/terraform-aws-lambda/releases/latest"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-lambda/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-lambda/actions/workflows/tfsec.yml"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"
  - name: "Changelog"
    image: "https://img.shields.io/badge/Changelog-blue"
    url: "CHANGELOG.md"

prerequesties:
  - name: Terraform
    url: https://learn.hashicorp.com/terraform/getting-started/install.html
    version: ">= 1.6.6"

providers:
  - name: aws
    url: https://aws.amazon.com/
    version: ">= 5.31.0"

module_dependencies:
  - name: Labels Module
    url: https://github.com/clouddrove/terraform-aws-labels
    description: Provides resource tagging.

#  description of this project
description: |-
  Terraform module to create Lambda resource on AWS for create lambda function.


# How to use this project
# yamllint disable rule:line-length
usage: |-
  Here are some examples of how you can use this module in your inventory structure:
  ### Basic Function
  ```hcl
    module "lambda" {
      source      = "clouddrove/lambda/aws"
      name        = local.name
      environment = local.environment
      filename    = "../../lambda_packages/existing_package.zip"
      handler     = "index.lambda_handler"
      runtime     = "python3.7"
      variables = {
        foo = "bar"
      }
    }
  ```
  ### Basic S3 Function
  ```hcl
    module "lambda" {
      source        = "clouddrove/lambda/aws"
      name        = local.name
      environment = local.environment
      s3_bucket   = "clouddrove-secure-bucket-test"
      s3_key      = "index.zip"
      handler     = "index.handler"
      runtime     = "nodejs18.x"
      variables = {
        foo = "bar"
      }
    }
  ```
  ### Complete Function
  ```hcl
    module "lambda" {
      source                            = "clouddrove/lambda/aws"
      name                              = local.name
      environment                       = local.environment
      create_layers                     = true
      timeout                           = 60
      filename                          = "../../lambda_packages/existing_package.zip"
      handler                           = "index.lambda_handler"
      runtime                           = "python3.8"
      compatible_architectures          = ["arm64"]
      cloudwatch_logs_retention_in_days = 7
      reserved_concurrent_executions    = 90
      iam_actions = [
        "logs:CreateLogStream",
        "logs:CreateLogGroup",
        "logs:PutLogEvents"

      ]
      names = [
        "python_layer"
      ]
      layer_filenames = ["../../lambda_packages/guardduty_enabler.zip"]
      compatible_runtimes = [
        ["python3.8"]
      ]

      statement_ids = [
        "AllowExecutionFromCloudWatch"
      ]
      actions = [
        "lambda:InvokeFunction"
      ]
      principals = [
        "events.amazonaws.com"
      ]
      source_arns = ["arn:aws:iam::xxxxxxxxxx:role/alarm-lambda-role"]
      variables = {
        foo = "bar"
      }
    }
  ```
